name: Build iEDA

on:
  push:
    paths:
      - ".github/workflows/build-ieda.yml"
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

jobs:
  check:
    outputs:
      sha: ${{ steps.sha.outputs.sha }}
      release-exists: ${{ steps.release.outputs.release-exists }}
    runs-on: ubuntu-latest
    steps:
      - name: Gather SHA
        id: sha
        run: |
          commit_sha=$(curl -s "https://api.github.com/repos/OSCC-Project/iEDA/commits" | jq -r '.[0].sha')
          if [ -z "$commit_sha" ]; then
            exit 1
          fi
          echo "sha=$(echo $commit_sha | cut -c1-7)" >> "$GITHUB_OUTPUT"

      - name: Check if release exists
        id: release
        run: |
          response=$(curl -s -o /dev/null -w "%{http_code}" "https://api.github.com/repos/oscc-ip/artifact/releases/tags/${{ steps.sha.outputs.sha }}")
          if [ "$response" -eq 200 ]; then
            echo "release-exists=true" >> "$GITHUB_OUTPUT"
          else
            echo "release-exists=false" >> "$GITHUB_OUTPUT"
          fi

  build:
    runs-on: ubuntu-latest
    needs: check
    if: needs.check.outputs.release-exists == 'false'
    permissions:
      contents: write
      id-token: write
      attestations: write
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          repository: OSCC-Project/iEDA
          submodules: true

      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Set up dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y tcl-dev libgflags-dev libgoogle-glog-dev libboost-all-dev libgtest-dev flex \
          libeigen3-dev libunwind-dev libmetis-dev libgmp-dev bison \
          libhwloc-dev libcairo2-dev ninja-build libtbb-dev libcurl4-openssl-dev

      - name: Set up GCC
        uses: egor-tensin/setup-gcc@v1
        with:
          version: 10
          platform: x64

      - name: Build iEDA
        env:
          CXXFLAGS: -Wno-error -fpermissive -fPIC
        run: |
          mkdir build
          cd build
          cmake .. -G Ninja -DCMD_BUILD=ON -DSANITIZER=OFF -DBUILD_STATIC_LIB=OFF -DCMAKE_RUNTIME_OUTPUT_DIRECTORY:FILEPATH=$(pwd)/bin -DCMAKE_BUILD_TYPE=Release
          cmake --build . --target all -- -j $(nproc)
          cd ..

      - name: Test iEDA
        run: |
          build/bin/iEDA -script scripts/hello.tcl

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          path: |
            build/bin/*

      - name: Publish Release
        id: publish
        uses: softprops/action-gh-release@v2
        with:
          fail_on_unmatched_files: true
          name: iEDA-${{ needs.check.outputs.sha }}
          tag_name: ${{ needs.check.outputs.sha }}
          make_latest: true
          files: |
            build/bin/*
          body: |
            iEDA release

      - name: Attest Release Files
        id: attest
        uses: actions/attest-build-provenance@v2
        with:
          subject-path: |
            build/bin/*
